//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CollegeLMS.TransactionServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionServer.ITransactions")]
    public interface ITransactions {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueBook", ReplyAction="http://tempuri.org/ITransactions/issueBookResponse")]
        bool issueBook(string regCode, string resId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueBook", ReplyAction="http://tempuri.org/ITransactions/issueBookResponse")]
        System.Threading.Tasks.Task<bool> issueBookAsync(string regCode, string resId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueComic", ReplyAction="http://tempuri.org/ITransactions/issueComicResponse")]
        bool issueComic(string regCode, string resId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueComic", ReplyAction="http://tempuri.org/ITransactions/issueComicResponse")]
        System.Threading.Tasks.Task<bool> issueComicAsync(string regCode, string resId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issuePastP", ReplyAction="http://tempuri.org/ITransactions/issuePastPResponse")]
        bool issuePastP(string regCode, string resId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issuePastP", ReplyAction="http://tempuri.org/ITransactions/issuePastPResponse")]
        System.Threading.Tasks.Task<bool> issuePastPAsync(string regCode, string resId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueNewsMag", ReplyAction="http://tempuri.org/ITransactions/issueNewsMagResponse")]
        bool issueNewsMag(string regCode, string resId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueNewsMag", ReplyAction="http://tempuri.org/ITransactions/issueNewsMagResponse")]
        System.Threading.Tasks.Task<bool> issueNewsMagAsync(string regCode, string resId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueVidDoc", ReplyAction="http://tempuri.org/ITransactions/issueVidDocResponse")]
        bool issueVidDoc(string regCode, string resId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issueVidDoc", ReplyAction="http://tempuri.org/ITransactions/issueVidDocResponse")]
        System.Threading.Tasks.Task<bool> issueVidDocAsync(string regCode, string resId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/unReturnedCount", ReplyAction="http://tempuri.org/ITransactions/unReturnedCountResponse")]
        int unReturnedCount(string memberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/unReturnedCount", ReplyAction="http://tempuri.org/ITransactions/unReturnedCountResponse")]
        System.Threading.Tasks.Task<int> unReturnedCountAsync(string memberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/resourcedIssued", ReplyAction="http://tempuri.org/ITransactions/resourcedIssuedResponse")]
        bool resourcedIssued(string table, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/resourcedIssued", ReplyAction="http://tempuri.org/ITransactions/resourcedIssuedResponse")]
        System.Threading.Tasks.Task<bool> resourcedIssuedAsync(string table, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/returnResource", ReplyAction="http://tempuri.org/ITransactions/returnResourceResponse")]
        bool returnResource(string memberCode, string resourceCode, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/returnResource", ReplyAction="http://tempuri.org/ITransactions/returnResourceResponse")]
        System.Threading.Tasks.Task<bool> returnResourceAsync(string memberCode, string resourceCode, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issuedResources", ReplyAction="http://tempuri.org/ITransactions/issuedResourcesResponse")]
        string issuedResources(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactions/issuedResources", ReplyAction="http://tempuri.org/ITransactions/issuedResourcesResponse")]
        System.Threading.Tasks.Task<string> issuedResourcesAsync(string searchTerm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionsChannel : CollegeLMS.TransactionServer.ITransactions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionsClient : System.ServiceModel.ClientBase<CollegeLMS.TransactionServer.ITransactions>, CollegeLMS.TransactionServer.ITransactions {
        
        public TransactionsClient() {
        }
        
        public TransactionsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool issueBook(string regCode, string resId, string type) {
            return base.Channel.issueBook(regCode, resId, type);
        }
        
        public System.Threading.Tasks.Task<bool> issueBookAsync(string regCode, string resId, string type) {
            return base.Channel.issueBookAsync(regCode, resId, type);
        }
        
        public bool issueComic(string regCode, string resId) {
            return base.Channel.issueComic(regCode, resId);
        }
        
        public System.Threading.Tasks.Task<bool> issueComicAsync(string regCode, string resId) {
            return base.Channel.issueComicAsync(regCode, resId);
        }
        
        public bool issuePastP(string regCode, string resId) {
            return base.Channel.issuePastP(regCode, resId);
        }
        
        public System.Threading.Tasks.Task<bool> issuePastPAsync(string regCode, string resId) {
            return base.Channel.issuePastPAsync(regCode, resId);
        }
        
        public bool issueNewsMag(string regCode, string resId, string type) {
            return base.Channel.issueNewsMag(regCode, resId, type);
        }
        
        public System.Threading.Tasks.Task<bool> issueNewsMagAsync(string regCode, string resId, string type) {
            return base.Channel.issueNewsMagAsync(regCode, resId, type);
        }
        
        public bool issueVidDoc(string regCode, string resId, string type) {
            return base.Channel.issueVidDoc(regCode, resId, type);
        }
        
        public System.Threading.Tasks.Task<bool> issueVidDocAsync(string regCode, string resId, string type) {
            return base.Channel.issueVidDocAsync(regCode, resId, type);
        }
        
        public int unReturnedCount(string memberID) {
            return base.Channel.unReturnedCount(memberID);
        }
        
        public System.Threading.Tasks.Task<int> unReturnedCountAsync(string memberID) {
            return base.Channel.unReturnedCountAsync(memberID);
        }
        
        public bool resourcedIssued(string table, string searchTerm) {
            return base.Channel.resourcedIssued(table, searchTerm);
        }
        
        public System.Threading.Tasks.Task<bool> resourcedIssuedAsync(string table, string searchTerm) {
            return base.Channel.resourcedIssuedAsync(table, searchTerm);
        }
        
        public bool returnResource(string memberCode, string resourceCode, string table) {
            return base.Channel.returnResource(memberCode, resourceCode, table);
        }
        
        public System.Threading.Tasks.Task<bool> returnResourceAsync(string memberCode, string resourceCode, string table) {
            return base.Channel.returnResourceAsync(memberCode, resourceCode, table);
        }
        
        public string issuedResources(string searchTerm) {
            return base.Channel.issuedResources(searchTerm);
        }
        
        public System.Threading.Tasks.Task<string> issuedResourcesAsync(string searchTerm) {
            return base.Channel.issuedResourcesAsync(searchTerm);
        }
    }
}
