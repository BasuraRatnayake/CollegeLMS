//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CollegeLMS.DatabaseServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DatabaseServer.IDatabaseServer")]
    public interface IDatabaseServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addBook", ReplyAction="http://tempuri.org/IPDResources/addBookResponse")]
        bool addBook(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addBook", ReplyAction="http://tempuri.org/IPDResources/addBookResponse")]
        System.Threading.Tasks.Task<bool> addBookAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showBook", ReplyAction="http://tempuri.org/IPDResources/showBookResponse")]
        string showBook(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showBook", ReplyAction="http://tempuri.org/IPDResources/showBookResponse")]
        System.Threading.Tasks.Task<string> showBookAsync(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeBook", ReplyAction="http://tempuri.org/IPDResources/removeBookResponse")]
        bool removeBook(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeBook", ReplyAction="http://tempuri.org/IPDResources/removeBookResponse")]
        System.Threading.Tasks.Task<bool> removeBookAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyBook", ReplyAction="http://tempuri.org/IPDResources/modifyBookResponse")]
        bool modifyBook(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyBook", ReplyAction="http://tempuri.org/IPDResources/modifyBookResponse")]
        System.Threading.Tasks.Task<bool> modifyBookAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addNewspaper", ReplyAction="http://tempuri.org/IPDResources/addNewspaperResponse")]
        bool addNewspaper(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addNewspaper", ReplyAction="http://tempuri.org/IPDResources/addNewspaperResponse")]
        System.Threading.Tasks.Task<bool> addNewspaperAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showNewspapers", ReplyAction="http://tempuri.org/IPDResources/showNewspapersResponse")]
        string showNewspapers(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showNewspapers", ReplyAction="http://tempuri.org/IPDResources/showNewspapersResponse")]
        System.Threading.Tasks.Task<string> showNewspapersAsync(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyNewspaper", ReplyAction="http://tempuri.org/IPDResources/modifyNewspaperResponse")]
        bool modifyNewspaper(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyNewspaper", ReplyAction="http://tempuri.org/IPDResources/modifyNewspaperResponse")]
        System.Threading.Tasks.Task<bool> modifyNewspaperAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeNewspaper", ReplyAction="http://tempuri.org/IPDResources/removeNewspaperResponse")]
        bool removeNewspaper(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeNewspaper", ReplyAction="http://tempuri.org/IPDResources/removeNewspaperResponse")]
        System.Threading.Tasks.Task<bool> removeNewspaperAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addComic", ReplyAction="http://tempuri.org/IPDResources/addComicResponse")]
        bool addComic(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addComic", ReplyAction="http://tempuri.org/IPDResources/addComicResponse")]
        System.Threading.Tasks.Task<bool> addComicAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showComics", ReplyAction="http://tempuri.org/IPDResources/showComicsResponse")]
        string showComics(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showComics", ReplyAction="http://tempuri.org/IPDResources/showComicsResponse")]
        System.Threading.Tasks.Task<string> showComicsAsync(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyComic", ReplyAction="http://tempuri.org/IPDResources/modifyComicResponse")]
        bool modifyComic(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyComic", ReplyAction="http://tempuri.org/IPDResources/modifyComicResponse")]
        System.Threading.Tasks.Task<bool> modifyComicAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeComic", ReplyAction="http://tempuri.org/IPDResources/removeComicResponse")]
        bool removeComic(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeComic", ReplyAction="http://tempuri.org/IPDResources/removeComicResponse")]
        System.Threading.Tasks.Task<bool> removeComicAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addDocVid", ReplyAction="http://tempuri.org/IPDResources/addDocVidResponse")]
        bool addDocVid(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addDocVid", ReplyAction="http://tempuri.org/IPDResources/addDocVidResponse")]
        System.Threading.Tasks.Task<bool> addDocVidAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showVidDoc", ReplyAction="http://tempuri.org/IPDResources/showVidDocResponse")]
        string showVidDoc(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showVidDoc", ReplyAction="http://tempuri.org/IPDResources/showVidDocResponse")]
        System.Threading.Tasks.Task<string> showVidDocAsync(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyVidDoc", ReplyAction="http://tempuri.org/IPDResources/modifyVidDocResponse")]
        bool modifyVidDoc(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyVidDoc", ReplyAction="http://tempuri.org/IPDResources/modifyVidDocResponse")]
        System.Threading.Tasks.Task<bool> modifyVidDocAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeVidDoc", ReplyAction="http://tempuri.org/IPDResources/removeVidDocResponse")]
        bool removeVidDoc(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removeVidDoc", ReplyAction="http://tempuri.org/IPDResources/removeVidDocResponse")]
        System.Threading.Tasks.Task<bool> removeVidDocAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addPastPaper", ReplyAction="http://tempuri.org/IPDResources/addPastPaperResponse")]
        bool addPastPaper(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/addPastPaper", ReplyAction="http://tempuri.org/IPDResources/addPastPaperResponse")]
        System.Threading.Tasks.Task<bool> addPastPaperAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showPastPapers", ReplyAction="http://tempuri.org/IPDResources/showPastPapersResponse")]
        string showPastPapers(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/showPastPapers", ReplyAction="http://tempuri.org/IPDResources/showPastPapersResponse")]
        System.Threading.Tasks.Task<string> showPastPapersAsync(string searchTerm, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyPastPaper", ReplyAction="http://tempuri.org/IPDResources/modifyPastPaperResponse")]
        bool modifyPastPaper(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/modifyPastPaper", ReplyAction="http://tempuri.org/IPDResources/modifyPastPaperResponse")]
        System.Threading.Tasks.Task<bool> modifyPastPaperAsync(string[] inputs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removePastPaper", ReplyAction="http://tempuri.org/IPDResources/removePastPaperResponse")]
        bool removePastPaper(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/removePastPaper", ReplyAction="http://tempuri.org/IPDResources/removePastPaperResponse")]
        System.Threading.Tasks.Task<bool> removePastPaperAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/resouceValid", ReplyAction="http://tempuri.org/IPDResources/resouceValidResponse")]
        bool resouceValid(string rCode, string rType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/resouceValid", ReplyAction="http://tempuri.org/IPDResources/resouceValidResponse")]
        System.Threading.Tasks.Task<bool> resouceValidAsync(string rCode, string rType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/getTitle", ReplyAction="http://tempuri.org/IPDResources/getTitleResponse")]
        string getTitle(string table, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/getTitle", ReplyAction="http://tempuri.org/IPDResources/getTitleResponse")]
        System.Threading.Tasks.Task<string> getTitleAsync(string table, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/getResourcePic", ReplyAction="http://tempuri.org/IPDResources/getResourcePicResponse")]
        string getResourcePic(string table, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDResources/getResourcePic", ReplyAction="http://tempuri.org/IPDResources/getResourcePicResponse")]
        System.Threading.Tasks.Task<string> getResourcePicAsync(string table, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberPass", ReplyAction="http://tempuri.org/IMember/getMemberPassResponse")]
        string getMemberPass(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberPass", ReplyAction="http://tempuri.org/IMember/getMemberPassResponse")]
        System.Threading.Tasks.Task<string> getMemberPassAsync(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberUsername", ReplyAction="http://tempuri.org/IMember/getMemberUsernameResponse")]
        string getMemberUsername(string regCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberUsername", ReplyAction="http://tempuri.org/IMember/getMemberUsernameResponse")]
        System.Threading.Tasks.Task<string> getMemberUsernameAsync(string regCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberPass", ReplyAction="http://tempuri.org/IMember/changeMemberPassResponse")]
        bool changeMemberPass(string regCode, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberPass", ReplyAction="http://tempuri.org/IMember/changeMemberPassResponse")]
        System.Threading.Tasks.Task<bool> changeMemberPassAsync(string regCode, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberEmail", ReplyAction="http://tempuri.org/IMember/changeMemberEmailResponse")]
        bool changeMemberEmail(string regCode, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberEmail", ReplyAction="http://tempuri.org/IMember/changeMemberEmailResponse")]
        System.Threading.Tasks.Task<bool> changeMemberEmailAsync(string regCode, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberContact", ReplyAction="http://tempuri.org/IMember/changeMemberContactResponse")]
        bool changeMemberContact(string username, string mobile, string home);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberContact", ReplyAction="http://tempuri.org/IMember/changeMemberContactResponse")]
        System.Threading.Tasks.Task<bool> changeMemberContactAsync(string username, string mobile, string home);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberAddress", ReplyAction="http://tempuri.org/IMember/changeMemberAddressResponse")]
        bool changeMemberAddress(string username, string street, string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/changeMemberAddress", ReplyAction="http://tempuri.org/IMember/changeMemberAddressResponse")]
        System.Threading.Tasks.Task<bool> changeMemberAddressAsync(string username, string street, string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/showMemberDetails", ReplyAction="http://tempuri.org/IMember/showMemberDetailsResponse")]
        string showMemberDetails(string searchTerm, string sType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/showMemberDetails", ReplyAction="http://tempuri.org/IMember/showMemberDetailsResponse")]
        System.Threading.Tasks.Task<string> showMemberDetailsAsync(string searchTerm, string sType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/revokeMembership", ReplyAction="http://tempuri.org/IMember/revokeMembershipResponse")]
        bool revokeMembership(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/revokeMembership", ReplyAction="http://tempuri.org/IMember/revokeMembershipResponse")]
        System.Threading.Tasks.Task<bool> revokeMembershipAsync(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberName", ReplyAction="http://tempuri.org/IMember/getMemberNameResponse")]
        string getMemberName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberName", ReplyAction="http://tempuri.org/IMember/getMemberNameResponse")]
        System.Threading.Tasks.Task<string> getMemberNameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberPic", ReplyAction="http://tempuri.org/IMember/getMemberPicResponse")]
        string getMemberPic(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMember/getMemberPic", ReplyAction="http://tempuri.org/IMember/getMemberPicResponse")]
        System.Threading.Tasks.Task<string> getMemberPicAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/regIDsAvailable", ReplyAction="http://tempuri.org/IDatabaseServer/regIDsAvailableResponse")]
        bool regIDsAvailable(string sid, string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/regIDsAvailable", ReplyAction="http://tempuri.org/IDatabaseServer/regIDsAvailableResponse")]
        System.Threading.Tasks.Task<bool> regIDsAvailableAsync(string sid, string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/regCodeAvailable", ReplyAction="http://tempuri.org/IDatabaseServer/regCodeAvailableResponse")]
        bool regCodeAvailable(string regcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/regCodeAvailable", ReplyAction="http://tempuri.org/IDatabaseServer/regCodeAvailableResponse")]
        System.Threading.Tasks.Task<bool> regCodeAvailableAsync(string regcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/insertRegCode", ReplyAction="http://tempuri.org/IDatabaseServer/insertRegCodeResponse")]
        int insertRegCode(string uid, string nic, string regcode, string pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/insertRegCode", ReplyAction="http://tempuri.org/IDatabaseServer/insertRegCodeResponse")]
        System.Threading.Tasks.Task<int> insertRegCodeAsync(string uid, string nic, string regcode, string pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validLogin", ReplyAction="http://tempuri.org/IDatabaseServer/validLoginResponse")]
        bool validLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validLogin", ReplyAction="http://tempuri.org/IDatabaseServer/validLoginResponse")]
        System.Threading.Tasks.Task<bool> validLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/userRegistered", ReplyAction="http://tempuri.org/IDatabaseServer/userRegisteredResponse")]
        bool userRegistered(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/userRegistered", ReplyAction="http://tempuri.org/IDatabaseServer/userRegisteredResponse")]
        System.Threading.Tasks.Task<bool> userRegisteredAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validUsername", ReplyAction="http://tempuri.org/IDatabaseServer/validUsernameResponse")]
        bool validUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validUsername", ReplyAction="http://tempuri.org/IDatabaseServer/validUsernameResponse")]
        System.Threading.Tasks.Task<bool> validUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validEmail", ReplyAction="http://tempuri.org/IDatabaseServer/validEmailResponse")]
        bool validEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validEmail", ReplyAction="http://tempuri.org/IDatabaseServer/validEmailResponse")]
        System.Threading.Tasks.Task<bool> validEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/registerUser", ReplyAction="http://tempuri.org/IDatabaseServer/registerUserResponse")]
        bool registerUser(string regCode, string[] personal, string[] contact, string[] login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/registerUser", ReplyAction="http://tempuri.org/IDatabaseServer/registerUserResponse")]
        System.Threading.Tasks.Task<bool> registerUserAsync(string regCode, string[] personal, string[] contact, string[] login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validNIC", ReplyAction="http://tempuri.org/IDatabaseServer/validNICResponse")]
        bool validNIC(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/validNIC", ReplyAction="http://tempuri.org/IDatabaseServer/validNICResponse")]
        System.Threading.Tasks.Task<bool> validNICAsync(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/getLICDetails", ReplyAction="http://tempuri.org/IDatabaseServer/getLICDetailsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] getLICDetails(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseServer/getLICDetails", ReplyAction="http://tempuri.org/IDatabaseServer/getLICDetailsResponse")]
        System.Threading.Tasks.Task<object[]> getLICDetailsAsync(string nic);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseServerChannel : CollegeLMS.DatabaseServer.IDatabaseServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseServerClient : System.ServiceModel.ClientBase<CollegeLMS.DatabaseServer.IDatabaseServer>, CollegeLMS.DatabaseServer.IDatabaseServer {
        
        public DatabaseServerClient() {
        }
        
        public DatabaseServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addBook(string[] inputs) {
            return base.Channel.addBook(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> addBookAsync(string[] inputs) {
            return base.Channel.addBookAsync(inputs);
        }
        
        public string showBook(string searchTerm, string Type) {
            return base.Channel.showBook(searchTerm, Type);
        }
        
        public System.Threading.Tasks.Task<string> showBookAsync(string searchTerm, string Type) {
            return base.Channel.showBookAsync(searchTerm, Type);
        }
        
        public bool removeBook(string isbn) {
            return base.Channel.removeBook(isbn);
        }
        
        public System.Threading.Tasks.Task<bool> removeBookAsync(string isbn) {
            return base.Channel.removeBookAsync(isbn);
        }
        
        public bool modifyBook(string[] inputs) {
            return base.Channel.modifyBook(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> modifyBookAsync(string[] inputs) {
            return base.Channel.modifyBookAsync(inputs);
        }
        
        public bool addNewspaper(string[] inputs) {
            return base.Channel.addNewspaper(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> addNewspaperAsync(string[] inputs) {
            return base.Channel.addNewspaperAsync(inputs);
        }
        
        public string showNewspapers(string searchTerm, string Type) {
            return base.Channel.showNewspapers(searchTerm, Type);
        }
        
        public System.Threading.Tasks.Task<string> showNewspapersAsync(string searchTerm, string Type) {
            return base.Channel.showNewspapersAsync(searchTerm, Type);
        }
        
        public bool modifyNewspaper(string[] inputs) {
            return base.Channel.modifyNewspaper(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> modifyNewspaperAsync(string[] inputs) {
            return base.Channel.modifyNewspaperAsync(inputs);
        }
        
        public bool removeNewspaper(string isbn) {
            return base.Channel.removeNewspaper(isbn);
        }
        
        public System.Threading.Tasks.Task<bool> removeNewspaperAsync(string isbn) {
            return base.Channel.removeNewspaperAsync(isbn);
        }
        
        public bool addComic(string[] inputs) {
            return base.Channel.addComic(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> addComicAsync(string[] inputs) {
            return base.Channel.addComicAsync(inputs);
        }
        
        public string showComics(string searchTerm, string Type) {
            return base.Channel.showComics(searchTerm, Type);
        }
        
        public System.Threading.Tasks.Task<string> showComicsAsync(string searchTerm, string Type) {
            return base.Channel.showComicsAsync(searchTerm, Type);
        }
        
        public bool modifyComic(string[] inputs) {
            return base.Channel.modifyComic(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> modifyComicAsync(string[] inputs) {
            return base.Channel.modifyComicAsync(inputs);
        }
        
        public bool removeComic(string isbn) {
            return base.Channel.removeComic(isbn);
        }
        
        public System.Threading.Tasks.Task<bool> removeComicAsync(string isbn) {
            return base.Channel.removeComicAsync(isbn);
        }
        
        public bool addDocVid(string[] inputs) {
            return base.Channel.addDocVid(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> addDocVidAsync(string[] inputs) {
            return base.Channel.addDocVidAsync(inputs);
        }
        
        public string showVidDoc(string searchTerm, string Type) {
            return base.Channel.showVidDoc(searchTerm, Type);
        }
        
        public System.Threading.Tasks.Task<string> showVidDocAsync(string searchTerm, string Type) {
            return base.Channel.showVidDocAsync(searchTerm, Type);
        }
        
        public bool modifyVidDoc(string[] inputs) {
            return base.Channel.modifyVidDoc(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> modifyVidDocAsync(string[] inputs) {
            return base.Channel.modifyVidDocAsync(inputs);
        }
        
        public bool removeVidDoc(string isbn) {
            return base.Channel.removeVidDoc(isbn);
        }
        
        public System.Threading.Tasks.Task<bool> removeVidDocAsync(string isbn) {
            return base.Channel.removeVidDocAsync(isbn);
        }
        
        public bool addPastPaper(string[] inputs) {
            return base.Channel.addPastPaper(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> addPastPaperAsync(string[] inputs) {
            return base.Channel.addPastPaperAsync(inputs);
        }
        
        public string showPastPapers(string searchTerm, string Type) {
            return base.Channel.showPastPapers(searchTerm, Type);
        }
        
        public System.Threading.Tasks.Task<string> showPastPapersAsync(string searchTerm, string Type) {
            return base.Channel.showPastPapersAsync(searchTerm, Type);
        }
        
        public bool modifyPastPaper(string[] inputs) {
            return base.Channel.modifyPastPaper(inputs);
        }
        
        public System.Threading.Tasks.Task<bool> modifyPastPaperAsync(string[] inputs) {
            return base.Channel.modifyPastPaperAsync(inputs);
        }
        
        public bool removePastPaper(string isbn) {
            return base.Channel.removePastPaper(isbn);
        }
        
        public System.Threading.Tasks.Task<bool> removePastPaperAsync(string isbn) {
            return base.Channel.removePastPaperAsync(isbn);
        }
        
        public bool resouceValid(string rCode, string rType) {
            return base.Channel.resouceValid(rCode, rType);
        }
        
        public System.Threading.Tasks.Task<bool> resouceValidAsync(string rCode, string rType) {
            return base.Channel.resouceValidAsync(rCode, rType);
        }
        
        public string getTitle(string table, string searchTerm) {
            return base.Channel.getTitle(table, searchTerm);
        }
        
        public System.Threading.Tasks.Task<string> getTitleAsync(string table, string searchTerm) {
            return base.Channel.getTitleAsync(table, searchTerm);
        }
        
        public string getResourcePic(string table, string searchTerm) {
            return base.Channel.getResourcePic(table, searchTerm);
        }
        
        public System.Threading.Tasks.Task<string> getResourcePicAsync(string table, string searchTerm) {
            return base.Channel.getResourcePicAsync(table, searchTerm);
        }
        
        public string getMemberPass(string nic) {
            return base.Channel.getMemberPass(nic);
        }
        
        public System.Threading.Tasks.Task<string> getMemberPassAsync(string nic) {
            return base.Channel.getMemberPassAsync(nic);
        }
        
        public string getMemberUsername(string regCode) {
            return base.Channel.getMemberUsername(regCode);
        }
        
        public System.Threading.Tasks.Task<string> getMemberUsernameAsync(string regCode) {
            return base.Channel.getMemberUsernameAsync(regCode);
        }
        
        public bool changeMemberPass(string regCode, string pass) {
            return base.Channel.changeMemberPass(regCode, pass);
        }
        
        public System.Threading.Tasks.Task<bool> changeMemberPassAsync(string regCode, string pass) {
            return base.Channel.changeMemberPassAsync(regCode, pass);
        }
        
        public bool changeMemberEmail(string regCode, string email) {
            return base.Channel.changeMemberEmail(regCode, email);
        }
        
        public System.Threading.Tasks.Task<bool> changeMemberEmailAsync(string regCode, string email) {
            return base.Channel.changeMemberEmailAsync(regCode, email);
        }
        
        public bool changeMemberContact(string username, string mobile, string home) {
            return base.Channel.changeMemberContact(username, mobile, home);
        }
        
        public System.Threading.Tasks.Task<bool> changeMemberContactAsync(string username, string mobile, string home) {
            return base.Channel.changeMemberContactAsync(username, mobile, home);
        }
        
        public bool changeMemberAddress(string username, string street, string city) {
            return base.Channel.changeMemberAddress(username, street, city);
        }
        
        public System.Threading.Tasks.Task<bool> changeMemberAddressAsync(string username, string street, string city) {
            return base.Channel.changeMemberAddressAsync(username, street, city);
        }
        
        public string showMemberDetails(string searchTerm, string sType) {
            return base.Channel.showMemberDetails(searchTerm, sType);
        }
        
        public System.Threading.Tasks.Task<string> showMemberDetailsAsync(string searchTerm, string sType) {
            return base.Channel.showMemberDetailsAsync(searchTerm, sType);
        }
        
        public bool revokeMembership(string nic) {
            return base.Channel.revokeMembership(nic);
        }
        
        public System.Threading.Tasks.Task<bool> revokeMembershipAsync(string nic) {
            return base.Channel.revokeMembershipAsync(nic);
        }
        
        public string getMemberName(string username) {
            return base.Channel.getMemberName(username);
        }
        
        public System.Threading.Tasks.Task<string> getMemberNameAsync(string username) {
            return base.Channel.getMemberNameAsync(username);
        }
        
        public string getMemberPic(string username) {
            return base.Channel.getMemberPic(username);
        }
        
        public System.Threading.Tasks.Task<string> getMemberPicAsync(string username) {
            return base.Channel.getMemberPicAsync(username);
        }
        
        public bool regIDsAvailable(string sid, string nic) {
            return base.Channel.regIDsAvailable(sid, nic);
        }
        
        public System.Threading.Tasks.Task<bool> regIDsAvailableAsync(string sid, string nic) {
            return base.Channel.regIDsAvailableAsync(sid, nic);
        }
        
        public bool regCodeAvailable(string regcode) {
            return base.Channel.regCodeAvailable(regcode);
        }
        
        public System.Threading.Tasks.Task<bool> regCodeAvailableAsync(string regcode) {
            return base.Channel.regCodeAvailableAsync(regcode);
        }
        
        public int insertRegCode(string uid, string nic, string regcode, string pic) {
            return base.Channel.insertRegCode(uid, nic, regcode, pic);
        }
        
        public System.Threading.Tasks.Task<int> insertRegCodeAsync(string uid, string nic, string regcode, string pic) {
            return base.Channel.insertRegCodeAsync(uid, nic, regcode, pic);
        }
        
        public bool validLogin(string username, string password) {
            return base.Channel.validLogin(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> validLoginAsync(string username, string password) {
            return base.Channel.validLoginAsync(username, password);
        }
        
        public bool userRegistered(string username) {
            return base.Channel.userRegistered(username);
        }
        
        public System.Threading.Tasks.Task<bool> userRegisteredAsync(string username) {
            return base.Channel.userRegisteredAsync(username);
        }
        
        public bool validUsername(string username) {
            return base.Channel.validUsername(username);
        }
        
        public System.Threading.Tasks.Task<bool> validUsernameAsync(string username) {
            return base.Channel.validUsernameAsync(username);
        }
        
        public bool validEmail(string email) {
            return base.Channel.validEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> validEmailAsync(string email) {
            return base.Channel.validEmailAsync(email);
        }
        
        public bool registerUser(string regCode, string[] personal, string[] contact, string[] login) {
            return base.Channel.registerUser(regCode, personal, contact, login);
        }
        
        public System.Threading.Tasks.Task<bool> registerUserAsync(string regCode, string[] personal, string[] contact, string[] login) {
            return base.Channel.registerUserAsync(regCode, personal, contact, login);
        }
        
        public bool validNIC(string nic) {
            return base.Channel.validNIC(nic);
        }
        
        public System.Threading.Tasks.Task<bool> validNICAsync(string nic) {
            return base.Channel.validNICAsync(nic);
        }
        
        public object[] getLICDetails(string nic) {
            return base.Channel.getLICDetails(nic);
        }
        
        public System.Threading.Tasks.Task<object[]> getLICDetailsAsync(string nic) {
            return base.Channel.getLICDetailsAsync(nic);
        }
    }
}
